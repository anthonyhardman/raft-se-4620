version: '3'

services:
  ah-gateway:
    container_name: ah-gateway
    build:
      context: ..
      dockerfile: Raft.Gateway/Dockerfile
    ports:
      - "344:8080"
    environment:
      - NODES=ah-node-1:8080,ah-node-2:8080,ah-node-3:8080

  ah-node-1:
    container_name: ah-node-1
    build:
      context: ..
      dockerfile: Raft.Node/Dockerfile
    image: ah-raft-node
    ports:
      - 346:8080
    environment:
      - NODES=ah-node-2:8080,ah-node-3:8080
      - NODE_ID=ah-node-1:8080

  ah-node-2:
    container_name: ah-node-2
    image: ah-raft-node
    ports:
      - 347:8080
    environment:
      - NODES=ah-node-1:8080,ah-node-3:8080
      - NODE_ID=ah-node-2:8080
      
  ah-node-3:
    container_name: ah-node-3
    image: ah-raft-node
    ports:
      - 348:8080
    environment:
      - NODES=ah-node-1:8080,ah-node-2:8080
      - NODE_ID=ah-node-3:8080

  ah-shop:
    container_name: ah-shop
    build:
      context: ..
      dockerfile: Raft.Shop/Dockerfile
    ports:
      - 349:8080
    environment:
      - STORAGE_SERVICE_URL=http://ah-gateway:8080

  ah-loki:
    container_name: ah-loki
    image: grafana/loki:latest

  ah-otel-collector:
    container_name: ah-otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    depends_on:
      - ah-loki

  ah-grafana:
    container_name: ah-grafana
    image: grafana/grafana:latest
    ports:
      - "345:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/grafana-datasource.yml
    depends_on:
      - ah-otel-collector

volumes:
  grafana_data: